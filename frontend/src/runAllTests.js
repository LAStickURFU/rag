/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ –ø–∞–∫–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
 * –ó–∞–ø—É—Å–∫: node src/runAllTests.js
 */

const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

// –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ç–µ—Å—Ç–∞–º–∏
const testsDir = path.join(__dirname, 'tests');

// –ù–∞–π—Ç–∏ –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
function findTestFiles(dir) {
  let results = [];
  const items = fs.readdirSync(dir);
 
  for (const item of items) {
    const itemPath = path.join(dir, item);
    const stat = fs.statSync(itemPath);
   
    if (stat.isDirectory()) {
      results = results.concat(findTestFiles(itemPath));
    } else if (item.endsWith('.test.js')) {
      results.push(itemPath);
    }
  }
 
  return results;
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
try {
  console.log('üîç –ü–æ–∏—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...');
  const testFiles = findTestFiles(testsDir);
  console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${testFiles.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤`);
 
  console.log('\nüß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ –ø–∞–∫–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ...\n');
 
  // –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ –ø–∞–∫–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
  execSync(`npx jest --config=jest.config.js`, { stdio: 'inherit' });
 
  console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!');
} catch (error) {
  console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error.message);
  process.exit(1);
}